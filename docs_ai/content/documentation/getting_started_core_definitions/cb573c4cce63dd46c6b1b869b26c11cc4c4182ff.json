{"file_name": "docs/getting_started/core_definitions.md", "questions": ["What is a session in ThamesThrive?", "How to track visitor behavior on a website or application using ThamesThrive?", "What is an event in ThamesThrive?", "What is a routing rule in ThamesThrive?", "How to automate the execution of workflows in ThamesThrive?", "What is an action in ThamesThrive?"], "answer": "f time during which a user is actively interacting with a system or application. Sessions are often used to track the actions and behavior of users over a period of time, and to provide personalized experiences or services based on that data.\n\n!!! Note\n    \n    One key characteristic of a session is that the data associated with it is usually temporary and volatile.\n    This means that the data is typically only stored for the duration of the session, and is not persisted beyond\n    that point. As a result, the data in a session is often considered to be ephemeral, and is not relied upon for \n    long-term storage or analysis.\n\n\n## Event\n\nIn the ThamesThrive, events are representations of something that is happening at a particular time. **Events can be used to track visitor behavior** on a website or application, and they can capture a wide range of actions and interactions. Examples of events may include clicks on links, logins, form submissions, page views, or any other action that needs to be tracked, such as a purchase order. Events can pass additional data, such as a username, a purchased item, or a viewed page, depending on the type of event and the data that is being tracked.\n\nWeb site events in ThamesThrive are typically triggered when JavaScript is executed on a selected page, or when an API query is made to the `/track` endpoint. Since the tracking code is present on every page, it can emit events as users interact with the site. The events and their types are configurable, and it is possible to configure the data that is sent for each event.\n\nEvents can be stored inside ThamesThrive, or they can be passed to a workflow to be processed outside the system. This allows for a wide range of flexibility in terms of how events are tracked and used within the ThamesThrive system.\n\n!!! Note \n\n    ThamesThrive has 2 types of event. Event with profile and without profile. Read about event \n    in [Event's Core Definitions](../events/index.md)\n    \n\n## Routing rule\n\nIn the ThamesThrive system, rules are used to determine which workflow should be executed when an event arrives. A rule consists of a condition and the name of a workflow. When an event is received, the system checks the condition of the rule to see if it is met. If the condition is met, the associated workflow is executed.\n\nThe condition of a rule has two elements: the event type and the source. If the event is of a certain type and comes from a specific source, the rule's condition is considered to be met, and the associated workflow is executed.\n\nThe rules in the ThamesThrive system provide a link between events and the workflows that should be executed in response to those events. By defining appropriate rules, it is possible to automate the execution of workflows based on the arrival of specific events in the system.\n\n## Workflows\n\nA workflow is a series of actions that are executed in response to an event. When an event is matched with a workflow, the actions in the workflow are executed according to the defined graph of nodes and connections.\n\nIn ThamesThrive a workflow is represented as a graph of nodes, with actions being assigned to individual nodes. The connections between nodes represent the flow of data from one action to another. Actions may perform a variety of tasks, such as copying data from the event to a user profile, saving the profile, querying for additional data, sending data to another system, or emitting a new event.\n\nActions in a workflow may be executed one after another, or they may be run in parallel. This allows for a high degree of flexibility in defining the sequence and execution of actions within a workflow. By constructing the appropriate graph of nodes and connections, it is possible to create complex, multi-step workflows that perform a wide range of tasks in response to events.\n\n## Actions\n\nIn the ThamesThrive system, an action is a single task that is performed as part of a workflow. An action consists of input and output ports, which are used to receive and sen"}
