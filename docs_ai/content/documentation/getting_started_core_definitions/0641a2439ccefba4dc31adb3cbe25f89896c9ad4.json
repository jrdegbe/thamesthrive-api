{"file_name": "docs/getting_started/core_definitions.md", "questions": ["What is ThamesThrive CPD?", "How to understand how ThamesThrive CPD works?", "What are the two types of traffic in ThamesThrive?", "What is a bridge in ThamesThrive?", "What is an event source in ThamesThrive?", "What is a resource in ThamesThrive?", "What is a session in ThamesThrive?"], "answer": "# ThamesThrive Core Definitions\nIn order to understand how ThamesThrive CPD works you will need to learn the following definitions.\n\n## Traffic\n\nThamesThrive is able to receive and send data. Therefore, the system defines two types of traffic. Incoming, i.e. systems that\nare able to send data to ThamesThrive. These will be websites, internal systems and services. Basically, logged inbound\ntraffic is defined by the id that ThamesThrive creates and which we use to identify the traffic.\n\nThe second type of traffic is outgoing traffic. These are external systems to which we send data or send data inquiries.\n\n!!! Tip\n\n    In the system, we call incoming traffic - event sources.\n    In the system, we call outgoing traffic - destinations.\n\n### Bridge\n\nA bridge is a piece of software that connects two separate systems or applications, allowing them to communicate and exchange data. In ThamesThrive **a bridge collects data from a particular source**, such as a queue, email, or social media, and transfer it through event source. For example, ThamesThrive come with an open source API bridge that allows it to collect data from an API `/track` endpoint and transfer it to the system. Commercial versions of ThamesThrive may come with other types of bridges, such as a Kafka bridge, which allows it to collect data from a Kafka message broker. \n\nWhen a new event source is created, the appropriate bridge must be selected to facilitate the collection and transfer of data.\n\n\n### Event source - inbound traffic\n\nIn order to kick-start your new project with ThamesThrive, you must create a new event source. That source will give you an identifier which when attached to your track calls will start collecting data about your users. Event source needs a bridge that will transfer data to the system.\n\n!!! Note\n\n    An event source may set to be ephemeral, meaning that the data that is received through this type of event\n    source is not saved in the system, but is only processed by the workflow. Ephemeral event sources do not \n    store data permanently, and the data is typically only used for the duration of the workflow. This allows \n    for the processing and analysis of data in real-time, without the need for long-term storage.\n\n!!! Warning\n\n    Some sources may require user consent to collect data from this source. A web page requires consent from the user to\n    collect and store their data.\n   \n\n### Resource\n\nA service resource is a type of resource that refers to a service or application that is accessed over a network or the Internet. Service resources can provide a wide range of functions and capabilities, including data storage, communication, computation, and more.\n\nIn ThamesThrive, resources are data sets or services that can be queried for data. They often require authentication, such as passwords or tokens, in order to access their data. When creating a resource in ThamesThrive, you may be asked to provide access to both test and production resources.\n\nThamesThrive allows you to [test your internal processes](../flow/index.md) by running workflows in test mode. In test mode, a workflow must connect with test resources in order to avoid making changes that could potentially cause problems in the production environment.\n\n!!! Info\n\n    The part of the resource definition that contains sensitive data is encrypted. \n\n## Session\n\nIn the ThamesThrive, a session is a type of data that is often associated with a visit to a website or application. As long as the session remains unchanged, the visit is considered to be ongoing. The session id is set when data is sent to ThamesThrive, and it is typically under the control of the client program.\n\nThe session often contains data about the context in which an event was launched, such as the type of device, operating system, or other characteristics of the user's environment. This data can be used to understand the context in which events are occurring, and to tailor the response or actions taken in response to those events.\n\nIn general, a session is a period o"}
