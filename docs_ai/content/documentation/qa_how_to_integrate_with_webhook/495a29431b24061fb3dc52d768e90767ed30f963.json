{"file_name": "docs/qa/how_to_integrate_with_webhook.md", "questions": ["What is the process of integrating external systems using webhooks?", "How to intercept a webhook?", "What is the difficulty in integrating external systems using webhooks?", "How to keep data within one profile when using webhooks?", "How to identify the transmitted data and keep it within one profile?", "How to merge the profile from the external system with the profile from ThamesThrive?"], "answer": "# How to integrate external systems using webhooks\nIntegrating a system using JavaScript is easy, but using webhooks is more challenging. A webhook sends an API call when\nan event occurs in an external system, such as Slack notifying when someone joins a channel or writes a message.\nIntercepting a webhook is simple - create a URL webhook in ThamesThrive and add it to the external system as the URL to send\ndata when an event occurs. However, the difficulty lies in the fact that the external system lacks information about the\nuser who raised the event. Each external system has its own method of user identification, which means the profile ID in\nthe external system is different from ThamesThrive's.\n\nThis discrepancy means that when data is sent, the external system may not send it in any globally defined way. As a\nresult, it is not possible to create a ThamesThrive event associated with any profile. Such events are profile-less, and\nunfortunately, do not contain information useful for tracking customer journeys. We must process these events and\nattempt to connect them with the existing ThamesThrive profile.\n\nFirst, we must ensure that all events collected by the webhook are grouped into one profile, even if it is not connected\nto an existing ThamesThrive profile. ThamesThrive can store multiple profiles belonging to one person, so if there is a\ntechnical possibility to connect them, it will do so. The collected data should be consistent and grouped per user.\n\nTo keep the data within one profile, the webhook needs to transmit an identifier assigned to the user, such as a user ID\nfrom an external system. If such data is not sent, we will not be able to use it, and it is best not to collect\nit unless it is needed for other purposes and can remain anonymous.\n\nTo identify the transmitted data and keep it within one profile, the event source in ThamesThrive has a `Replace profile ID`\nfield in which we specify where the ID that identifies the profiles is located in the webhook data/payload. \nThis identifier is used to group events and connect each event to one profile.\n\nOnce we have grouped events, we can consider whether there is any data that allows us to merge the profile from the\nexternal system with the profile from ThamesThrive. For this purpose, we use identification points and some data that \nidentifies the profile across all systems. We can use email for example, which is a common part between \nThamesThrive and the external system.\n"}
