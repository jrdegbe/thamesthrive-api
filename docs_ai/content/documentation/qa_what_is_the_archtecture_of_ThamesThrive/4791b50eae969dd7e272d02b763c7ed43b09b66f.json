{"file_name": "docs/qa/what_is_the_archtecture_of_ThamesThrive.md", "questions": ["What is the architecture of ThamesThrive?", "How to set up ThamesThrive?", "What components does ThamesThrive include?", "What elements must be activated for ThamesThrive to work fully?"], "answer": "# What is the architecture of ThamesThrive?\nThamesThrive is a distributed system that consists of several components working together to track and analyze customer\ndata. The core components of ThamesThrive include:\n\n- an ElasticSearch database for storing events,\n- a Redis server for caching,\n- a RESTful API,\n- a graphical user interface (GUI) for end-users.\n\nAdditionally, ThamesThrive includes background workers that perform background processes such as importing and segmentation.\n\n## Communication\n\nThe GUI connects to the API, which in turn connects to the database. ThamesThrive components can be installed and run\nseparately, and multiple replicas of each component can be activated to meet the needs of the business.\n\nFor the system to work fully, at least four elements must be activated, including the database, API, GUI, and the\nbackground import worker. The architecture allows for additional elements such as microservices, data bridges and\nbackground processes for profile merging and segmentation.\n", "hash": "4791b50eae969dd7e272d02b763c7ed43b09b66f"}
