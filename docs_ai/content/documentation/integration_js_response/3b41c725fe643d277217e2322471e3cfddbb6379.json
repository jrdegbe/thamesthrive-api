{"file_name": "docs/integration/js/response.md", "questions": ["What is the purpose of the \"window.onThamesThriveReady\" function?", "How to bind a function to \"window.OnThamesThriveReady\"?", "What parameters does the \"window.onThamesThriveReady\" function have?", "How to bind an event to a page element?"], "answer": "after the events are triggered. It will not run if ThamesThrive did not respond.\n\nThe function have the following parameters.\n\n* *helpers* - this is a reference to class that will allow you to raise another events\n* *context* has the response from ThamesThrive to you initial events. It will have profile data, and if configured debug\n  information.\n* *config* - it is the tracker config as defined in options\n* *tracker* - it is tracker object.\n\n## OnThamesThriveReady triggered on selected page\n\nYou can bind functions to `windows.OnThamesThriveReady` on selected pages together with track events. Then it will be\nexecuted only on selected pages.\n\n```javascript\nwindow.tracker.track(\"page-view\",{}); // (1)\nwindow.onThamesThriveReady = ({tracker, helpers, context, config}) => {\n    // Code\n}\n```\n\n1. Set tracks first. Then bind a function.\n\n### Binding events to page elements\n\nThen you can write a code that binds for example onClick event on a button to ThamesThrive event.\n\nThis is the example code that you can bind to `window.onThamesThriveReady`\n\n```javascript title=\"Example\" linenums=\"1\"\n({helpers, context}) => {\n    const btn0 = document.querySelector('#button')\n\n    helpers.onClick(btn0, async ()=> {\n        const response = await helpers.track(\"page-view\", {\"page\": \"hello\"});\n\n        if(response) {\n            const responseToCustomEvent = document.getElementById('response-to-custom-event');\n            responseToCustomEvent.innerText = JSON.stringify(response.data, null, \" \");\n            responseToCustomEvent.style.display = \"block\"\n        }\n    });\n}\n```\n\nIt looks for the element with id=\"button\"\n\n```javascript title=\"Example\" linenums=\"1\"\nconst btn0 = document.querySelector('#button')\n```\n\nThen using helpers binds onClick on that element to function:\n\n```javascript title=\"Example\" linenums=\"1\"\nasync ()=> {\n        // Send event to ThamesThrive\n        const response = await helpers.track(\"page-view\", {\"page\": \"hello\"});\n\n        if(response) {\n            const responseToCustomEvent = document.getElementById('response-to-custom-event');\n            responseToCustomEvent.innerText = JSON.stringify(response.data, null, \" \");\n            responseToCustomEvent.style.display = \"block\"\n        }\n    }\n``` \n\nInside the function we send the event to ThamesThrive:\n\n```javascript title=\"Example\" linenums=\"1\"\nconst response = await helpers.track(\"page-view\", {\"page\": \"hello\"});\n```\n\nAnd on response we make a string from JSON response and bind it as innerText of element with\nid='response-to-custom-event'\n\n## Wrap up\n\nThe whole configuration looks like this:\n\n```html title=\"Whole code\" linenums=\"1\"\n<script>\n\n    // Compiled code must be always in the first line\n    \n    !function(e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):(\"undefined\"!=typeo...\n\n    // Configure tracker\n\n    const options = {\n        tracker: {\n            url: {\n                script: 'http://192.168.1.103:8686/tracker',\n                api: 'http://192.168.1.103:8686'\n            },\n            source: {\n                id: \"ee2db027-46cf-4034-a759-79f1c930f80d\"\n            }\n        }\n    }\n    \n    // Bind some function when ThamesThrive responds\n\n    window.onThamesThriveReady.bind(({helpers, context}) => {\n        const btn0 = document.querySelector('#button')\n    \n        helpers.onClick(btn0, async ()=> {\n            const response = await helpers.track(\"page-view\", {\"page\": \"hello\"});\n    \n            if(response) {\n                const responseToCustomEvent = document.getElementById('response-to-custom-event');\n                responseToCustomEvent.innerText = JSON.stringify(response.data, null, \" \");\n                responseToCustomEvent.style.display = \"block\"\n            }\n        });\n    });\n\n</script>\n```\n\n## ThamesThrive helpers\n\nYou probably noticed that we use helpers to bind events. We used onClick method to bind to click event. You might need\nto bind to other than click event. To do that use addEventListener:\n\n```"}
