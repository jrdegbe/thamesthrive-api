{"file_name": "docs/events/event_tracking.md", "questions": ["What is the purpose of webhooks?", "How to send data from one application to another using webhooks?", "What are profile-less events and how to use them?"], "answer": " the session, so the session\n  id should change with each new user visit. Read more on session in\n  the [core definitions section](../getting_started/core_definitions.md#session)\n\nAdditionally, the `profile id` should be sent to the system. For the first visit, there is no profile id so profile id\nfield is not sent. After first connection ThamesThrive will return a profile id that should be attached with each subsequent\nconnection to /track endpoint.\n\nIf no `profile id` is defined in sent data then new profile id will be generated.\n\nIf you want to send `context` attach it to context field. Context as well as properties may have any schema.\n\nExample of event data payload with context `attached`.\n\n```json\n{\n  \"source\": {\n    \"id\": \"source-id\"\n  },\n  \"session\": {\n    \"id\": \"session-id\"\n  },\n  \"profile\": {\n    \"id\": \"profile-id\"\n  },\n  \"events\": [\n    {\n      \"type\": \"purchase-order\",\n      \"properties\": {\n        \"product\": \"Nike shoes\",\n        \"quantity\": 1\n      }\n    },\n    {\n      \"type\": \"page-view\"\n    }\n  ],\n  \"context\": {\n    \"device\": \"iPhone X\"\n  }\n} \n```\n\n## Event options\n\nThere is an `options` section in the data sent to ThamesThrive. It allows you to configure how the server should respond to\nthe query.\n\n```json title=\"Example of track data payload with options\" linenums=\"1\" hl_lines=\"20\"\n{\n  \"source\": {\n    \"id\": \"source-id\"\n  },\n  \"session\": {\n    \"id\": \"session-id\"\n  },\n  \"events\": [\n    {\n      \"type\": \"purchase-order\",\n      \"properties\": {\n        \"product\": \"Nike shoes\",\n        \"quantity\": 1\n      }\n    },\n    {\n      \"type\": \"page-view\"\n    }\n  ],\n  \"options\": {}\n} \n```\n\nWe have the following options.\n\n* `debugger` - True / False value - whether ThamesThrive should send back data on how the workflow has gone through, if the\n  events and profiles have been created. E.g. In a production environment, the debugger should be set to False.\n* `profile` - True / False value - whether ThamesThrive should send back the full user profile or just his id. In most\n  cases, the id alone is enough.\n* `saveSession` - True / False value - whether ThamesThrive should save the session data.\n* `saveEvents` - True / False value - whether ThamesThrive should save the event or just process it\n\n### Example of debugger data\n\n```json title=\"Example of debugger data\"\n{\n  \"debugging\": {\n    \"session\": {\n      \"saved\": 1,\n      \"errors\": [],\n      \"ids\": [\n        \"string\"\n      ],\n      \"types\": []\n    },\n    \"events\": {\n      \"saved\": 0,\n      \"errors\": [],\n      \"ids\": [],\n      \"types\": []\n    },\n    \"profile\": {\n      \"saved\": 1,\n      \"errors\": [],\n      \"ids\": [\n        \"0d2d9dc5-0d60-471e-956f-8766dcb8aba2\"\n      ],\n      \"types\": []\n    },\n    \"execution\": {},\n    \"segmentation\": {\n      \"errors\": [],\n      \"ids\": []\n    },\n    \"logs\": []\n  }\n}\n```\n\n## Tracking events with webhook\n\nA webhook is a way for an application to provide other applications with real-time information. It allows one application to send a message or information to another application when a specific event or trigger occurs. \n\nWebhooks are typically used to send data from one application to another over the internet. They can be used to connect a wide variety of applications and services, such as social media platforms, payment gateways, and customer relationship management systems.\n\n### Profile-less events and webhooks\n\nIn some cases, we may not have access to a customer's profile data but we do have an identifier that allows us to identify the customer. An example of this scenario might be when we have a discount coupon and we know which customer received the coupon on external systems, but we do not have access to that information at the time of the event (which only includes the voucher ID). In these situations, we can send profile data as a profile-less event. This means that the system will not have a profile ID or create a new profile.\n\nHowever, it is possible to retrieve customer data from external systems and attach the appropriate profile at the time of event processing"}
