{"file_name": "docs/qa/how_ThamesThrive_is_upgraded.md", "questions": ["- How is ThamesThrive upgraded?", "- What are the types of ThamesThrive upgrades?", "- How are minor upgrades different from major upgrades?", "- What is the process for performing a minor upgrade?", "- What is the process for performing a major upgrade?", "- How does data migration work during a major upgrade?", "- What is the recommended approach for upgrading ThamesThrive versions?", "- How does the upgrade process work for multi-tenant instances of ThamesThrive?", "- Why is it important to perform data migration for all tenants during a major upgrade?"], "answer": "# How ThamesThrive is upgraded?\nThamesThrive upgrades are categorized into two types: minor upgrades and major upgrades.\n\n**Minor Upgrades**: Minor upgrades do not involve any changes in the underlying database structure. These upgrades are\nindicated by a change in the last number of the version. For example, upgrading from version 0.8.1.x to version 0.8.1.y\nwould be considered a minor upgrade. Minor upgrades do not require data migration and can be performed simply by\nupgrading the Docker tag to the new version. The system will continue to work as it did before the upgrade.\n\n**Major Upgrades**: Major upgrades, on the other hand, involve changes in the database structure. These upgrades are\nindicated by a change in a number other than the last one in the version. For example, upgrading from version 0.8.0 to\nversion 0.8.1 would be considered a major upgrade. Major upgrades typically require data migration or data schema\nupdates. In ThamesThrive, data migration is performed using Elasticsearch's reindexing process. This involves running two\ncopies of the system with separate sets of indices: one with the old version and one with the new version. Once the\nmigration is complete, the Docker tag can be upgraded, and the system will automatically switch to the new version.\nAfter a period of time, the old version's data can be safely deleted.\n\nThamesThrive provides migration scripts for all major versions, allowing for smooth upgrades. However, it's important to\nnote that these scripts are only available from one version to the next. Skipping versions is not supported, and custom\nscripts may require additional effort and commercial services. It is recommended to follow the upgrade path version by\nversion to ensure proper data migration and system stability.\n\nIf you are running a multi-tenant instance of ThamesThrive, the upgrade process will be applied to all tenants\nsimultaneously. This means that when performing an upgrade, the changes will be applied uniformly across all the tenants\nin the system.\n\nIn the case of a major upgrade, where data structure changes are involved, it is important to note that the migration\nprocess will require migrating the data for all tenants. This ensures that the entire system is up-to-date and\nconsistent with the new version. The data migration process, must be performed for\nall tenants to ensure that their data aligns with the updated database structure.\n\nBy applying the major upgrade to all tenants and performing the necessary data migration, the system can maintain data\nintegrity.\n", "hash": "e4fade6fbcabbbd6c76311bea6e930aaf676b990"}
