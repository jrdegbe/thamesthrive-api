{"file_name": "docs/qa/can_you_describe_ThamesThrive_components.md", "questions": ["- What are the different components that make up ThamesThrive?", "- How would you describe the ThamesThrive components?", "- Can you provide an overview of the ThamesThrive components?", "- What is the purpose of each ThamesThrive component?", "- What containers are used by ThamesThrive?"], "answer": "# Can you describe ThamesThrive components?\nThis is technical documentation of source code and dockers.\n\n## Commercial ThamesThrive API\n\n- Source: com-ThamesThrive/com_ThamesThrive, ThamesThrive/ThamesThrive\n- Github: https://github.com/ThamesThrive/com-ThamesThrive, https://github.com/ThamesThrive/ThamesThrive\n- Docker: ThamesThrive/com-ThamesThrive-api\n- Description: This is commercial ThamesThrive API responsible for collecting and processing events.\n\n## Commercial Jobs\n\n### Heartbeats\n\n- Source: com-ThamesThrive/com_job/heartbeat\n- Github: https://github.com/ThamesThrive/com-ThamesThrive\n- Docker: ThamesThrive/com-heartbeat-job\n- Description: This job is responsible for running some defined event on all profiles. \n\n### Live Segmentation\n\n- Source: com-ThamesThrive/com_job/segmentation\n- Github: https://github.com/ThamesThrive/com-ThamesThrive\n- Docker: ThamesThrive/com-ThamesThrive-segmentation-job\n- Description: Iterate over live segmentation flows and push to the segmentation:live queue a job for worker that\n  segments the profile based on the live workflows.\n\n## Commercial Workers\n\n### Scheduler\n\n- Source: None\n- Github: https://github.com/ThamesThrive/com-ThamesThrive\n- Docker: ThamesThrive/com-ThamesThrive-scheduler-worker, ThamesThrive/com-ThamesThrive-scheduler\n- Description: background processes for Pause and Result actions. This is basically as rq worker and rqscheduler from RQ\n  library.\n\n### Segmentation and Coping\n\n- Source: com-ThamesThrive/com_worker\n- Github: https://github.com/ThamesThrive/com-ThamesThrive\n- Docker: ThamesThrive/com-ThamesThrive-segmentation-worker\n- Redis Queue Worker that monitors the following queues:\n    - segmentation:live,\n    - event_to_profile_coping:worker,\n    - event_props_to_event_traits:worker\n- Description:\n    - event_props_to_event_traits:worker is responsible for background coping of historical event properties to traits.\n    - event_to_profile_coping:worker is responsible for background event to profile coping\n    - segmentation:live is responsible for warning live segmentations. It is triggered by segmentation job.\n\n## Commercial bridges\n\n- Source: com-bridge-queue\n- Github: https://github.com/ThamesThrive/com-bridge-queue\n- Description: Queue bridges.\n\n## Open-source ThamesThrive API\n\n- Source:ThamesThrive\n- Github: https://github.com/ThamesThrive/ThamesThrive-api\n- Description: This is open-source ThamesThrive API responsible for collecting and processing events.\n\n## Open-source Workers\n\n- Source:ThamesThrive/worker\n- Github: https://github.com/ThamesThrive/ThamesThrive-api\n- Description: This is open-source ThamesThrive worker responsible for imports and system migration. \n\n---\nThis document also answers the questions.\n\n- Provide an overview of the different components that comprise ThamesThrive ?\n- What are the key building blocks or modules that constitute ThamesThrive ?\n- What are the fundamental components or sections within ThamesThrive ?\n- What are the main functions of ThamesThrive components ?\n- What containers ThamesThrive needs?\n", "hash": "8f53abb5919ff5ba696bc6dd9d33ff54c5c3dc3a"}
