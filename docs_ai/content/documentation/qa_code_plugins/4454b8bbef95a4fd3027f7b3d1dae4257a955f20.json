{"file_name": "docs/qa/code/plugins.md", "questions": ["Question 1: What is the purpose of the plugin form?", "Optional Question 1: How are plugins configured with JSON objects?", "Optional Question 2: How are form fields mapped with JSON configuration?"], "answer": "# What is plugin form?\nThe plugin form is part of plugin code where you define the configuration of the plugin. Basically plugins can be\nconfigured with JSON objects. Forms map the form fields with the JSON. When changes are made within the form, it is\nreflected in the JSON configuration and vice-versa.\n\nFor instance, when we have a form like this\n\n```python\nform = Form(groups=[\n   FormGroup(\n      name=\"Event type plugin configuration\",\n      description=\"Define required event type\",\n      fields=[\n         FormField(\n            id=\"resource\",\n            name=\"Resource\",\n            description=\"Select your API resource.\",\n            component=FormComponent(type=\"resource\", props={\"label\": \"API Resource\", \"tag\": \"api\"})\n         ),\n         FormField(\n            id=\"event_type\",\n            name=\"Event type\",\n            description=\"Event type to check\",\n            component=FormComponent(type=\"text\", props={\"label\": \"Event type\"})\n         )\n      ]\n   )\n]),\n```\n\nand JSON configuration like this:\n\n```json\ninit={\n   \"resource\": {\n      \"id\": \"\",\n      \"name\": \"\"\n   },\n   \"event_type\": {\n      \"id\": \"\",\n      \"name\": \"\"\n   }\n}\n```\n\nThat means the `FormGroup` \"Event type plugin configuration\" is created with two `FormField`s: \"Resource\" and \"Event\ntype\". The `id` of a `FormField` must match with a configuration property in `init`, allowing for a connection between the form\nvalue and the configuration value. This is explained as \"This is how you bind configuration with the form field.\" in the\ndocumentation.", "hash": "4454b8bbef95a4fd3027f7b3d1dae4257a955f20"}
