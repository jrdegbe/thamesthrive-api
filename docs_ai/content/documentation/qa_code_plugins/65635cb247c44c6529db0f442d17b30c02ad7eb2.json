{"file_name": "docs/qa/code/plugins.md", "questions": ["Question 1: What is an example of a plugin form in ThamesThrive?", "Optional question 1: How can users select the API resource for their ThamesThrive plugin?", "Optional question 2: How can users specify the event type for their ThamesThrive plugin?"], "answer": "# Write an example of plugin form\nAn exemplary plugin form in ThamesThrive could be the \"Event type plugin configuration\" that has been described in the\nprovided document. Here is its structure:\n\n```python\nForm(groups=[\n    FormGroup(\n        name=\"Event type plugin configuration\",\n        description=\"Define required event type\",\n        fields=[\n            FormField(\n                id=\"resource\",\n                name=\"Resource\",\n                description=\"Select your API resource.\",\n                component=FormComponent(type=\"resource\", props={\"label\": \"API Resource\", \"tag\": \"api\"})\n            ),\n            FormField(\n                id=\"event_type\",\n                name=\"Event type\",\n                description=\"Event type to check\",\n                component=FormComponent(type=\"text\", props={\"label\": \"Event type\"})\n            )\n        ]\n    )\n])\n```\n\nThe plugin form contains two main fields:\n\n1. `Resource` - This allows users to select the API resource for their plugin. This field is created using a\n   FormComponent with a type of \"resource\". The \"label\" and \"tag\" properties for this field indicate the way the field\n   will be displayed in the GUI.\n\n2. `Event type` - This field enables users to specify the event type their plugin should target. It is created using\n   another FormComponent but with a type of \"text\". This component also has a \"label\" property which determines how the\n   field will be presented in the GUI.\n\nBy extending the plugin form with these fields, users can specify a resource and event type for their plugin, tailoring\nit to their specific use case.\n\nThe form array should be referenced in `register` function in Plugin object property `spec.form` like this:\n\n```python\n\nfrom ThamesThrive.service.plugin.domain.register import Plugin, Spec, MetaData\nfrom ThamesThrive.service.plugin.domain.register import Form, FormGroup, FormField, FormComponent  #", "hash": "65635cb247c44c6529db0f442d17b30c02ad7eb2"}
