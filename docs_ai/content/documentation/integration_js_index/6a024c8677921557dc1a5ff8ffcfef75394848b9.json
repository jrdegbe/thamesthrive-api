{"file_name": "docs/integration/js/index.md", "questions": ["const options = {", "            tracker: {", "                url: {", "                    script: 'http://192.168.1.103:8686/tracker', ", "                    api: 'http://192.168.1.103:8686'", "                },", "                source: {", "                    id: \"YOUR-EVENT-SOURCE-ID-HERE\" // (2)", "                }", "            }", "        }", "</script>", "```", "How to integrate a webpage with ThamesThrive for tracking and personalization purposes?", "What is an event type in ThamesThrive?", "What is the purpose of an event type in ThamesThrive?", "How to define an event type in ThamesThrive?", "What is the importance of event type in ThamesThrive?", "What is the response from ThamesThrive when the event source ID is not defined?", "How to resolve the response \"Access denied. Invalid source\" from ThamesThrive?"], "answer": "# Javascript integrations\nThamesThrive provides a JavaScript snippet that allows seamless integration of any webpage with ThamesThrive for tracking and\npersonalization purposes. Follow the steps below to connect and configure the JavaScript snippet on your web page.\n\n## Step 1: Connecting the JavaScript Snippet\n\nTo use the ThamesThrive JavaScript snippet, you need to paste it in the header of your web page. Here's an example of the snippet:\n\n```html linenums=\"1\"\n\n<script>\n\n        !function(e){\"object\"==typeof exports&&\"undefine...  // (1)\n\n        const options = {\n            tracker: {\n                url: {\n                    script: 'http://192.168.1.103:8686/tracker', \n                    api: 'http://192.168.1.103:8686'\n                },\n                source: {\n                    id: \"<your-event-source-id-HERE>\" // (2)\n                }\n            }\n        }\n</script>\n```\n1. Compiled javascript code must be the first line in the script.\n2. You `event source id` should be copied here. Event source can be found in Inbound traffic in ThamesThrive GUI.\n\n## Step 2: Sending events via Javascript\n\nEvents are defined in a separate script. Below you may find an example of such script.\n\n```javascript title=\"Example\" linenums=\"1\"\nwindow.tracker.track(\"purchase-order\", {\"product\": \"Sun glasses - Badoo\", \"price\": 13.45})\nwindow.tracker.track(\"interest\", {\"Eletronics\": [\"Mobile phones\", \"Accessories\"]})\nwindow.tracker.track(\"page-view\",{});\n```\n\nEvents consist of an event type. Event type is any string that describes what happened. In our example we have 3\nevents: \"purchase-order\", \"interest\", \"page-view\".\n\n!!! Caution\n\n  The code with events must be placed after the configuration code. Otherwise, it will now work.\n\n### Event type\n\nEvent type is a crucial aspect of defining events in ThamesThrive. It refers to the name that distinguishes events from each\nother. For example, a purchase order event provides information about an order, while a page view event signifies a\nviewed page.\n\nDefining an appropriate event type is essential to ensure proper categorization and processing of events within\nThamesThrive. It allows you to effectively organize and analyze event data based on their type, which can aid in gaining\nvaluable insights and generating meaningful reports. \n\n#### Importance of Event Type\n\nEvent type serves as a unique identifier for events and helps differentiate them from one another. It enables you to\neffectively manage and process events, as different events may require different handling or processing logic based on\ntheir type.\n\nWhen defining an event in ThamesThrive, you need to specify an event type that accurately represents the nature of the\nevent. For instance, if you are tracking purchase orders, you can define the event type as \"purchase-order\". Similarly,\nif you are tracking page views, you can define the event type as \"page-view\".\n\n### Events properties\n\nIn ThamesThrive, each event can have additional data that provides detailed information about the event. For example,\nconsider the event \"interest\" which sends data in the format {\"Electronics\": [\"Mobile phones\", \"Accessories\"]}.\n\nThamesThrive collects all events with their respective data and sends them as a single request to the ThamesThrive tracker\nendpoint. This request is made when the web page is fully loaded, ensuring that all events and their associated data are\ncaptured accurately.\n\n\n## Step 3: Refreshing the Page and Verifying the Response\n\nAfter refreshing your web page with the JavaScript code, you may notice a response from ThamesThrive indicating \"Access\ndenied. Invalid source.\" This is because the event source ID was not defined in the __tracker.source.id__ section of the\nsnippet.\n\n```\nHeaders:\nStatus: 401 Unauthorized\n\nBody:\n{\"detail\": \"Access denied. Invalid source.\"}\n```\n\nTo resolve this, create an event source in ThamesThrive and replace the string <your-resource-id-HERE> with the actual event source ID from ThamesThrive, as shown below:\n\n```html linenums=\"1\"\n<script>\n        !function(e){"}
