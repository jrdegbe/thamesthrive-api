{"file_name": "docs/qa/how_ThamesThrive_uses_entities.md", "questions": ["What is the difference between entities and aux properties in ThamesThrive?"], "answer": "# What are entities and how can I use them.\nIn ThamesThrive, entity is concept used for storing and managing data. ThamesThrive maintains a separate index, which can be\nconsidered as a store or table, specifically designed to hold information about entities. Each entity has a unique type\nand associated data.\n\nThe entity index in ThamesThrive allows you to store various types of data, depending on your requirements. For example, you\ncan store information about email, products, or any other relevant data related to your business or application.\n\nThamesThrive provides plugins called \"Save Entity\" and \"Load Entity\" that enable you to interact with the entity index\nwithin your workflows. These plugins are available in the commercial version of ThamesThrive. With the \"Save Entity\" plugin,\nyou can save or update data for a specific entity in the entity index. The \"Load Entity\" plugin allows you to retrieve\nthe stored data of an entity from the index.\n\nEach entity is related to profile.\n\nIt's worth mentioning that if you are using the open-source version of ThamesThrive and require similar functionality, you\ncan utilize the \"profile@aux\" attribute to store data. While it may not provide the same dedicated entity index as in\nthe commercial version, the \"profile@aux\" attribute serves as a convenient way to store additional information within a\nuser's profile. You can leverage this attribute to store and retrieve data similar to how entities work in the\ncommercial version.\n\n## Difference between Entities and Aux Property\n\nEntities and aux properties in ThamesThrive have distinct characteristics in terms of their relationship and usage:\n\n* __Relationship__: Entities in ThamesThrive can be associated with a one-to-many relationship. This means that a single\n  profile can have multiple entities associated with it. For instance, you can have an entity called \"Purchase\"\n  associated with a specific user profile, and that user profile can have multiple purchase entities linked to it. This\n  allows for storing and managing collections of related data under a single profile.\n\n  On the other hand, the aux property in ThamesThrive has a one-to-one relationship. Each profile can have its own aux\n  property, which serves as an additional attribute associated with that specific profile. The aux property allows you\n  to store supplementary information related to the profile, but it is limited to a single set of data per profile.\n\n* __Usage__: Entities are commonly used when dealing with data that has a common theme or relationship but varies in\n  quantity. For example, entities can be utilized to store various actions, or interactions related to a customer, where\n  each entity represents a specific instance of that action (e.g. Purchase, Sent email).\n\n  Conversely, aux properties are typically employed to store specific details or metadata about a profile that are\n  unique to that individual. This can include preferences, additional user information, or any other supplementary data\n  that is directly associated with the profile itself.\n\nIn summary, the key distinction between entities and aux properties lies in their relationship and usage. Entities can\nestablish a one-to-many relationship between profiles and associated data, while aux properties maintain a one-to-one\nrelationship, providing an additional attribute specific to each profile. Understanding this difference allows for\nbetter organization and management of data within ThamesThrive based on your specific needs.\n\n## Entities as an Extension of Events\n\nIt's important to note that the profile is also in a one-to-many relationship with events. This means that a single\nprofile can have multiple events associated with it. Each event represents a specific action or occurrence related to\nthe profile, such as a user interaction, a purchase, or any other significant event that you want to track.\n\nSince events capture a wide range of activities, entities can be seen as an extension of events. Entities provide a way\nto store additional data"}
