{"file_name": "docs/qa/code/plugins1.md", "questions": ["Questions that cover the whole content:", "- What is the basic code template for a custom plugin in ThamesThrive?", "Optional questions that cover only part of the text:", "- How do you import the required modules from the ThamesThrive package?", "- What is the purpose of the `run` method in a ThamesThrive plugin?", "- How do you register a plugin in the ThamesThrive system?"], "answer": "# Basic code template for ThamesThrive plugin?\nTo write a plugin in ThamesThrive, you typically follow a certain pattern in your Python code. Here's an example of what a\nsimple code template for a custom plugin may look like:\n\n```python\nfrom ThamesThrive.service.plugin.runner import ActionRunner\nfrom ThamesThrive.service.plugin.domain.result import Result\n\n\nclass FlowWalker(ActionRunner):\n\n    def __init__(self):\n        # Init data here \n        pass\n\n    async def set_up(self, config):\n        # setup resource if needed\n        pass\n\n    async def run(self, payload: dict):\n        # process and return data\n        return Result(port=\"payload\", value=payload)\n\n    async def close(self):\n        # close all open connections\n        pass\n```\n\nHere's a breakdown of the main components of a plugin:\n\n1. First, import the required modules from the ThamesThrive package.\n\n2. Then, create a class for your plugin that inherits from `ActionRunner`. This makes your class a plugin, capable of\n   being run by ThamesThrive.\n\n3. The `__init__` method is the initializer for your class. You can do any necessary setup here.\n\n4. `set_up` method is for setting up resources if needed.\n\n5. The `run` method is where the processing of data will happen. This function accepts a payload argument which is a\n   dictionary and returns the result of the operation as a `Result` object.\n\n6. The `close` method is for cleaning up, closing connections or any necessary teardown.\n\nRemember, the plugin template above is a basic structure. Depending on your goals, your plugin might have additional\nmethods or an altered structure.\n\nNote that plugins should b register in the system. Check the documentation on how to register the plugin.\n\n---\nThis document answers the questions:\n- How to write a custom plugin?", "hash": "3fe5e7a1ee80e277d68740b942583fd53195625c"}
