{"file_name": "docs/qa/code/plugins1.md", "questions": ["One question that covers the whole content: ", "- What does the code template provide for creating ThamesThrive plugins?", "Optional questions that cover only part of the text:", "- What does the `register` function return?", "- What does the form configuration define in the code template?", "- What information does the metadata section include in the code template?"], "answer": "rd generator configuration\",\n                        fields=[\n                            FormField(\n                                id=\"max_length\",\n                                name=\"Password maximum length\",\n                                description=\"Please provide maximum length of password.\",\n                                component=FormComponent(\n                                    type=\"text\",\n                                    props={\n                                        \"label\": \"Maximum password length\"\n                                    }\n                                )\n                            ),\n                            # Other form fields...\n                        ]\n                    )\n                ]\n            )\n        ),\n        metadata=MetaData(\n            name='Generate password',\n            desc='Generate new password according to user input',\n            icon='password',\n            group=[\"Operations\"],\n            documentation=Documentation(\n                inputs={\n                    \"payload\": PortDoc(desc=\"This port takes payload object.\")\n                },\n                outputs={\"password\": PortDoc(desc=\"This port returns generated password.\")}\n            )\n        )\n    )\n```\n\nThe `register` function returns a `Plugin` instance that represents the plugin registration information. It includes:\n\n- Plugin specifications such as the module and class name, input and output ports, version, license, author information,\n  initialization values, and a manual reference.\n- Form configuration that defines the user interface for configuring the plugin. It includes form groups, form fields,\n  and their respective properties such as labels and descriptions.\n- Metadata information such as the plugin name, description, icon, group, and documentation details including inputs and\n  outputs descriptions.\n\nBy using this code template, you can create your own ThamesThrive plugins that generate passwords or perform other custom\nactions with configurable settings.\n\n---\nThis document answers the questions:\n- How to write a custom plugin?\n", "hash": "f49505902d3b959e09d27fb00dbf40fd02cd0740"}
