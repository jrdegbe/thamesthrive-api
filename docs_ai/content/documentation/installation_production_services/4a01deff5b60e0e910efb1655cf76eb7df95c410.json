{"file_name": "docs/installation/production/services.md", "questions": ["What services are available for a production ready ThamesThrive installation?", "How to access the Collector API?", "What is the functionality of the Scheduler?", "What is the functionality of the Segmentation Worker?", "What is the functionality of the Update and Migration workers?", "What is the functionality of the Bridges?"], "answer": "# Production services\nThis is the list services/dockers for production ready ThamesThrive installation.\n\nService    | Description\n-----| -------------\nGUI    | Not exposed to the internet, VPN only.\nCollector API    | Exposed to the internet, limited to collecting data only, no GUI.\nProduction API    | Not exposed to the internet, VPN only, access to production data.\nStaging API    | Not exposed to the internet, VPN only, access to test data.\nScheduler    | Service for rescheduling delayed events.\nScheduler Worker    | Service responsible for executing delayed events.\nSegmentation Job    | Periodically runs and checks for profiles to run through segmentation process.\nSegmentation Worker    | Runs defined segmentation process.\nUpdate and Migration    | Set of workers for system migration and data import.\nBridges    | Services for collecting data from different channels, bridges transportation protocol to ThamesThrive event source.\n\n## Collector API\n\nThe Collector API is the API that should be exposed to the internet. It has a limited API function that is designed\nspecifically for collecting data. No GUI-like operations are available.\n\n### Access:\n\nThis API is accessible via the internet and can be utilized for collecting data.\n\n### Limitations:\n\nThe Collector API does not have any GUI operations available, and its functionality is limited to collecting data only.\n\n## Production API\n\nThe Production API is the API that should not be exposed to the internet. It has API functions that provide access to\nproduction data. Only users who are authorized to see real data should have opened accounts on this instance.\n\n### Access:\n\nAccess to the Production API is restricted and limited to authorized users only. Only users with opened accounts are\nallowed to access the production data through this API.\n\n### Limitations:\n\nThis API is not exposed to the internet, and access to production data is restricted to authorized users only.\n\n## Staging API\n\nThe Staging API is the API that should not be exposed to the internet. It has API functions that provide access to test\ndata. Access to this server should be limited to people working on data orchestration.\n\n### Access:\n\nAccess to the Staging API is restricted, and only personnel working on data orchestration should have access to this\nserver.\n\n### Limitations:\n\nThis API is not exposed to the internet, and access to test data is restricted to personnel working on data\norchestration.\n\n## Scheduler\n\nThe Scheduler is a service that reschedules the execution of delayed events. A delayed event occurs when a workflow\npauses and resumes after some time.\n\n### Functionality:\n\nThe Scheduler is responsible for rescheduling the execution of delayed events in the system.\n\n## Scheduler Worker\n\nThe Scheduler Worker is a service that is responsible for executing the delayed events. A delayed event occurs when a\nworkflow pauses and resumes after some time.\n\n### Functionality:\n\nThe Scheduler Worker is responsible for executing the delayed events in the system.\n\n## Segmentation Job\n\nThe Segmentation Job is a job that runs periodically and checks if some profiles should be run through a segmentation\nprocess.\n\n### Functionality:\n\nThe Segmentation Job runs periodically and checks for profiles that need to be run through the segmentation process.\n\n## Segmentation Worker\n\nThe Segmentation Worker runs a defined segmentation process.\n\n### Functionality:\n\nThe Segmentation Worker is responsible for running the defined segmentation process in the system.\n\n## Update and Migration\n\nThe Update and Migration is a set of workers responsible for system migration, data import, etc.\n\n### Functionality:\n\nThe Update and Migration workers are responsible for various tasks such as system migration and data import.\n\n## Bridges\n\nThe Bridges are services responsible for collecting data from different channels. They bridge the defined transportation\nprotocol to ThamesThrive event source.\n\n### Functionality:\n\nThe Bridges collect data from different channe"}
