{"file_name": "docs/development/micro_frontend.md", "questions": ["What is the process for developing a Micro Frontend App?"], "answer": "# Micro frontend applications\nThamesThrive uses micro application to interact with customers. Micro-apps are regular ReactJs, or Angular, or plain\nJavascript apps that can be bundled into single javascript file and injected into the webpage.\n\nWe use a ReactJs template repo for new ReactJs app.\n\nTo start developing Micro Frontend App use the ThamesThrive-uix-template on [http://github.com/ThamesThrive/ThamesThrive-uix-template](http://github.com/ThamesThrive/ThamesThrive-uix-template)\n\n1. Goto [http://github.com/ThamesThrive/ThamesThrive-uix-template](http://github.com/ThamesThrive/ThamesThrive-uix-template)\n2. Click button Use this template. __Big green button__ at the top right side of the screen. \n3. Enter the name of your repository\n\nThis will create a repo with files needed to start working on the app. Now its time to clone the repo and enter its\nfolder and type\n\n`npm install`\n\nThis will install all the required dependencies.\n\n!!! Tip\n    If you would like to cooperate with other contributors on this app or want the repo to be part of ThamesThrive organization\n    on the GitHub let us know (on\n    our [Slack workspace](https://join.slack.com/t/ThamesThrive/shared_invite/zt-10y7w0o9y-PmCBnK9qywchmd1~KIER2Q)). We will\n    create a repo that you can fork.\n\n## Source code\n\nNow, let's inspect the repo folders and find out what we have here:\n\nThere are two main folders:\n\n* __public__ - it holds the index.html file that you can use later for testing your micro-frontend-app\n* __src__ - this is where is your code. We will inspect this folder further below\n\nThe other files are `package.js` and `README.md` with installation tips. \n\n!!! Tip\n    \n    Please edit the app name in package.js. \n    `{\"name\": \"<name-widget>\", ...}`\n\n### Source folder\n\nInside `src` folder you will find a `index.js` file. This is where your app starts. Please change the \n\n```javascript\nconst widgetName = 'ThamesThrive-uix-your-name'\n```\n\nto have the name of your app. \n\nThen there is `App.js`. This is the injected micro-frontend-app. Notice that it takes the domElement.\n\n```javascript title=\"App.js\"\nimport React from 'react';\nimport \"regenerator-runtime/runtime\";\n\nfunction App({domElement}) {  // (1)\n\n    const attribute = domElement.getAttribute(\"data-attribute1\") || \"I am test attribute\"\n    return <h1>\"Hello world \" + {attribute}</h1>\n\n}\n\nexport default App;\n```\n\n1. Dom parameter used to read the configuration of the micro-frontend-app. The configuration will be filled in ThamesThrive and passed as data attributes.  \n\nThis is because we need some way to pass the parameters to the app. And it is done by defining them inside the dom elements like this.\n\n```html title=\"This is the example form index.html\"\n\n<div class=\"ThamesThrive-uix-your-name\" data-attribute1=\"my-attribute1\" data-attribute2=\"my-attribute1\"></div>\n<script src=\"widget/index.js\"></script>\n```\n\n!!! Tip\n\n    __Please notice__ that the class of the `div` must be the same as the application name defined in the `index.js` file. See below.\n\n## Connecting the app container with the code\n\nYou will need to define __connection between the HTML and your app__. The `src/index.js` file is responsible for this.\nIt is done in `const widgetName = 'ThamesThrive-uix-your-name'`\nand `const widgetDivs = document.querySelectorAll('.'+widgetName)` line. You also need to reference this name\nin `index.html`. See the class of a div.\n\n=== \"src/index.js\"\n\n    ```javascript \n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import App from './App';\n    \n    const widgetName = 'ThamesThrive-uix-your-name'  // (1)\n    const widgetDivs = document.querySelectorAll('.'+widgetName)\n    \n    widgetDivs.forEach(Div => {\n        ReactDOM.render(\n            <React.StrictMode>\n                <App domElement={Div} />\n            </React.StrictMode>,\n            Div\n        );\n    })\n    ```\n\n    1. Your app placeholder class name. Please change it to yout app name and prefix it with: `ThamesThrive-uix-`. This name must also be a class name for __div__ tag in `index.html`\n\n=== \"pu", "hash": "d4e831bdf5fb1877c405f8a24e048d9e8c9b1042"}
