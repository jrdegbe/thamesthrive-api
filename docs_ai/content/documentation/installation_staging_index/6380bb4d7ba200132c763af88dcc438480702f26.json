{"file_name": "docs/installation/staging/index.md", "questions": ["- What is the purpose of a staging server?", "- How should a staging server be deployed for ThamesThrive?", "- How should a production server be deployed for ThamesThrive?", "- How does ThamesThrive ensure the security of its staging server?", "- Do I need a separate license for the staging server if I have a commercial version of ThamesThrive?"], "answer": "# Staging server\nA staging server is a type of server environment that is used to test and debug new settings/configuration changes\nbefore they are deployed to a production server. ThamesThrive has a clear separation of a test and production data. This\nallows developers to test and refine new settings in a safe and controlled environment, without impacting\nthe performance or functionality of the live production website or application. It also allows QA Team to test the\napplication before it goes to the production. This helps ensure that the configuration is stable and functioning\nproperly before it is made available to end users. Overall, using a staging server helps to minimize the risk of errors\nor disruptions in a live production environment, and helps to ensure the quality and stability of the final product.\n\n## ThamesThrive staging server deployment\n\nTo deploy ThamesThrive on a staging server, a separate copy of the system must be installed and designated as such. This\ninvolves setting the \"PRODUCTION\" environment variable to \"no,\" which creates a new set of Elasticsearch indices.\nAdditionally, the staging server should be exposed on a different port than the production server and ideally not\naccessible from the internet.\n\n## ThamesThrive production server deployment\n\nTo deploy ThamesThrive on a production server, another copy of the system must be installed and configured with the \"\nPRODUCTION\" environment variable set to \"yes.\" This creates a new set of Elasticsearch indices prefixed with \"prod-\".\n\n## Staging server security and networking\n\nThe preferred settings for networking a staging server involve separating the staging and production servers by\nassigning different API IP addresses. This is done for security reasons, as the staging server should not be exposed to\nthe internet and should only be accessible within the internal network, preferably through a VPN. This ensures that only\nthe production collector endpoints are publicly available.\n\nAdditionally, it is important to limit access to the production server by not having accounts with roles that allow\nchanges to the server configuration. The best practice is to have a single admin account and only marketing accounts\nthat can view data but not change any settings. This helps to prevent unauthorized access or changes that could\npotentially disrupt the production environment.\n\n## Licensing commercial version of ThamesThrive\n\nNo need to worry about separate licenses for staging and production servers, all commercial licenses cover both.\n\n!!! Tip\n\n    When working with ThamesThrive the production server should not be edited directly. Instead, all changes should be made on the staging server and\n    thoroughly tested before being deployed to the production system. This helps to minimize the risk of errors or\n    disruptions in the live production environment.\n\n    Once changes have been tested on the staging server, they can then be deployed to the production system. This is done by\n    copying the data from the staging server to the production server. However, certain data such as events, profiles, or\n    error logs will not be copied over during this process to ensure that the production server data remains intact.\n\n## More information\n\nMore information can be found at https://youtu.be/10W7OzezF_k\n\n---\nThis documentation answers the following questions:\n\n* How to test workflows?\n* What is a staging server?\n* What is the process of staging in ThamesThrive?\n* How does ThamesThrive ensure the security of its staging server?\n* Do I need a separate license for the staging server if I have a commercial version of ThamesThrive?\n", "hash": "6380bb4d7ba200132c763af88dcc438480702f26"}
